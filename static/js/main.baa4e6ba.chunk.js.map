{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/CounterFeedbacks/CounterFeedbacks.jsx","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","CounterFeedback","state","handelAddFeedback","setState","prevState","this","Math","floor","countTotalFeedback","Object","keys","countPositiveFeedbackPercentage","Component","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"4WAmBeA,MAhBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SAELC,QAAS,kBAAMJ,EAAgBE,IAHjC,SAKGA,GAHIA,S,MCSAG,MAdf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,8BACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,EAAZ,OACA,qDAAwBC,EAAxB,a,MCAOC,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,qCACGD,GAAS,6BAAKA,IACdC,M,MCDQC,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,6BAAKA,KC6DCC,E,4MAxDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,kBAAoB,SAAAhB,GAClB,EAAKiB,UAAS,SAAAC,GAAS,sBACpBlB,EAASkB,EAAUlB,GAAU,O,wDAIlC,WACE,OAAOmB,KAAKJ,MAAMX,KAAOe,KAAKJ,MAAMV,QAAUc,KAAKJ,MAAMT,M,6CAG3D,WACE,OAAOc,KAAKC,MAAOF,KAAKJ,MAAMX,KAAOe,KAAKG,qBAAwB,O,oBAGpE,WACE,OACE,mCACE,gCACE,cAAC,EAAD,CACEZ,MAAO,yBACPC,SACE,cAAC,EAAD,CACEd,QAAS0B,OAAOC,KAAKL,KAAKJ,OAC1BjB,gBAAiBqB,KAAKH,sBAK3BG,KAAKG,qBAAuB,EAC3B,cAAC,EAAD,CACEZ,MAAO,aACPC,SACE,cAAC,EAAD,CACEP,KAAMe,KAAKJ,MAAMX,KACjBC,QAASc,KAAKJ,MAAMV,QACpBC,IAAKa,KAAKJ,MAAMT,IAChBC,MAAOY,KAAKG,qBACZd,mBAAoBW,KAAKM,sCAK/B,cAAC,EAAD,CAAcZ,QAAQ,+B,GAjDJa,aCIfC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.baa4e6ba.chunk.js","sourcesContent":["import './FeedbackOptions.css';\r\nimport React from 'react';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          type=\"button\"\r\n          key={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import './statistics.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total} </li>\r\n        <li>Positive feedback: {positivePercentage}%</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import './Section.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import './Notification.css';\r\n\r\nfunction Notification({ message }) {\r\n  return <h2>{message}</h2>;\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport './CounterFeedbacks.css';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\n\r\nclass CounterFeedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handelAddFeedback = option => {\r\n    this.setState(prevState => ({\r\n      [option]: prevState[option] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    return Math.floor((this.state.good / this.countTotalFeedback()) * 100);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Section\r\n            title={'Please, leave feedback'}\r\n            children={\r\n              <FeedbackOptions\r\n                options={Object.keys(this.state)}\r\n                onLeaveFeedback={this.handelAddFeedback}\r\n              />\r\n            }\r\n          />\r\n\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Section\r\n              title={'Statistics'}\r\n              children={\r\n                <Statistics\r\n                  good={this.state.good}\r\n                  neutral={this.state.neutral}\r\n                  bad={this.state.bad}\r\n                  total={this.countTotalFeedback()}\r\n                  positivePercentage={this.countPositiveFeedbackPercentage()}\r\n                />\r\n              }\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CounterFeedback;\r\n","import React from 'react';\r\nimport CounterFeedbacks from './components/CounterFeedbacks/CounterFeedbacks';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <CounterFeedbacks />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}